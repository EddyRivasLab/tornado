# Makefile for Tornado
# 
SHELL       = /bin/sh

# Installation targets
#
prefix      = @prefix@
exec_prefix = @exec_prefix@
datarootdir = @datarootdir@
LIBDIR      = @libdir@
INCLUDEDIR  = @includedir@
BINDIR      = @bindir@
MANDIR      = @mandir@
PDFDIR      = @pdfdir@

MYLIBDIR = -L../easel
MYINCDIR = -I../easel

LIBS     = -lm
YLIBS    = -ll -ly
MYLIBS   = -leasel
LFLAGS   = -L../easel
IFLAGS   = -I../easel

# Compiler configuration
#
CC       = @CC@
CFLAGS   = @CFLAGS@
AR       = @AR@ rcv
LN       = ln
RANLIB   = @RANLIB@
LDFLAGS  = -static @LDFLAGS@
SIMDFLAGS= @SIMD_CFLAGS@
CPPFLAGS = @CPPFLAGS@
LIBGSL   = @LIBGSL@


LEX      = flex -I
YACC     = bison

#######
## You should not need to modify below this line.
#######

PACKAGE     = @PACKAGE_NAME@
BASENAME    = @PACKAGE_TARNAME@
RELEASE     = @TORNADO_VERSION@
RELEASEDATE = "@TORNADO_DATE@"
COPYRIGHT   = "@TORNADO_COPYRIGHT@"
LICENSELINE = "@TORNADO_LICENSE@"
COMPRESS    = gzip

# Code manifests
#
YPROGS   = grm-dirichlet\
	   grm-em\
	   grm-emit\
	   grm-fold\
	   grm-gldist\
	   grm-parse\
	   grm-psample\
	   grm-score\
	   grm-sseval\
	   grm-train\

PROGS    = milestone1\
	   m2_collate\
	   m2_fold\
	   m2_train\
	   distplot\

YOBJS    = lex.yy.o\
           grm_parsegrammar.tab.o

HEADERS  = grammar.h\
	   grm.h\
	   grm_bg.h\
	   grm_cyk.h\
	   grm_gldistdp.h\
	   grm_gmx.h\
	   grm_io.h\
	   grm_inside.h\
	   grm_mea.h\
	   grm_mpi.h\
	   grm_minimizer.h\
	   grm_mixdchlet.h\
	   grm_nussinov.h\
	   grm_optimize.h\
	   grm_outside.h\
	   grm_paramfit.h\
	   grm_paramsample.h\
	   grm_paramsample.tab.h\
	   grm_parsegrammar.h\
	   grm_parsetree.h\
	   grm_posterior.h\
	   grm_sccyk.h\
	   grm_sscyk.h\
	   grm_ssemit.h\
	   grm_util.h\
	   grm_emit_func.h\
	   grm_fold_func.h\
	   grm_gldist_func.h\
	   grm_psample_func.h\
	   grm_score_func.h\
	   grm_train_count_func.h\
	   grm_train_optimize_func.h\
	   grm_train_regularize_func.h\
           basecomposition.h\
           logsum.h

OBJS     = \
	grammar.o\
	grm_bg.o\
	grm_cyk.o\
	grm_gldistdp.o\
	grm_gmx.o\
	grm_io.o\
	grm_inside.o\
	grm_mea.o\
	grm_mpi.o\
	grm_minimizer.o\
	grm_mixdchlet.o\
	grm_nussinov.o\
	grm_optimize.o\
	grm_outside.o\
        grm_paramfit.o\
        grm_paramsample.o\
	grm_parsetree.o\
	grm_posterior.o\
	grm_sccyk.o\
	grm_sscyk.o\
	grm_ssemit.o\
	grm_util.o\
	grm_emit_func.o\
	grm_fold_func.o\
	grm_gldist_func.o\
	grm_psample_func.o\
	grm_score_func.o\
	grm_train_count_func.o\
	grm_train_optimize_func.o\
	grm_train_regularize_func.o\
        basecomposition.o\
        logsum.o	

all: ${YPROGS} ${PROGS} ~/src/easel/libeasel.a

${YPROGS}: %: ${YOBJS} ${OBJS} %.o 
	${CC} ${MYINCDIR} ${CFLAGS} ${IFLAGS} ${LFLAGS} -o $@ $@.o ${YOBJS} ${OBJS} ${LIBS} ${YLIBS} ${MYLIBS}

${PROGS}: %: %.o ${OBJS}
	${CC} ${MYINCDIR} ${CFLAGS} ${IFLAGS} ${LFLAGS} -o $@ $@.o ${OBJS} ${LIBS} ${MYLIBS} 

lex.yy.o: lex.yy.c grm_parsegrammar.tab.h

lex.yy.c: grm_parsegrammar.lex 
	${LEX} grm_parsegrammar.lex

grm_parsegrammar.tab.o: grm_parsegrammar.h

grm_parsegrammar.tab.c grm_parsegrammar.tab.h: grm_parsegrammar.y
	${YACC} -v -d grm_parsegrammar.y

.c.o:   
	${CC} ${MYINCDIR} ${IFLAGS} ${SIMDFLAGS} ${CFLAGS} -c $<
 

# install:   installs libeasel.a in LIBDIR/
#            installs Easel headers in INCLUDEDIR/
#            installs miniapp binaries in BINDIR/
#
# All install paths are prefaced with DESTDIR/ to facilitate
# building RPMS in Linux distros. Usually DESTDIR is empty.
#
install:
	mkdir -p ${DESTDIR}${LIBDIR}
	mkdir -p ${DESTDIR}${INCLUDEDIR}
	mkdir -p ${DESTDIR}${BINDIR}
	cp libeasel.a ${DESTDIR}${LIBDIR}/
	for file in ${HEADERS}; do\
	   cp $$file ${DESTDIR}${INCLUDEDIR}/;\
	done
	(cd miniapps; make install)

# `make check`: run user testsuite
check:
	(cd testsuite; make check)


clean:
	-rm -f ${YPROGS} ${PROGS} ${OBJS} ${YOBJS} libeasel.a lex.yy.c *.lex.yy.c *.tab.c *.output *.o
	-rm -f *~ TAGS
	-rm -f *.gcno *.gcda *.gcov
	-rm -f core.[0-9]*
	-rm -f config.log config.status
	-rm -f example test testdrive stats
	if test -d documentation; then  (cd documentation; make clean); fi
	if test -d testsuite;     then  (cd testsuite;     make clean); fi
	if test -d miniapps;      then  (cd miniapps;      make clean); fi

distclean:
	make clean
	-rm esl_config.h
	-rm -rf autom4te.cache
	if test -d documentation; then (cd documentation; make distclean); fi
	if test -d testsuite;     then (cd testsuite;     make distclean); fi
	if test -d miniapps;      then (cd miniapps;      make distclean); fi
	-rm LICENSE.csh
	-rm Makefile

#######
## Targets below this line are meant for developers, not users.
## Some may only work in context of a developer's Subversion working directory.
#######

# 'make REPOSITORY=... dist' : create a new distribution tarball
#
dist:
	# Make sure we pointed the make dist to a subversion repository
	@if test x${REPOSITORY} = 'x'; then\
	  echo "REPOSITORY isn't set; use make REPOSITORY=... dist";\
	  exit 1;\
	fi
	# Delete any old versions of the same release
	@if test -d ../${BASENAME}-${RELEASE};        then rm -rf ../${BASENAME}-${RELEASE};        fi
	@if test -e ../${BASENAME}-${RELEASE}.tar;    then rm -f  ../${BASENAME}-${RELEASE}.tar;    fi
	@if test -e ../${BASENAME}-${RELEASE}.tar.Z;  then rm -f  ../${BASENAME}-${RELEASE}.tar.Z;  fi
	@if test -e ../${BASENAME}-${RELEASE}.tar.gz; then rm -f  ../${BASENAME}-${RELEASE}.tar.gz; fi
	# Export the release from Subversion control
	svn export ${REPOSITORY} ../${BASENAME}-${RELEASE}
	# Make the configure script from configure.ac
	(cd ../${BASENAME}-${RELEASE};  autoconf)
	# We'll need some basic Makefiles
	(cd ../${BASENAME}-${RELEASE}/; ./configure)
	# Set file permissions.
	find ../${BASENAME}-${RELEASE} -type f -exec chmod +r {} \;
	chmod +x ../${BASENAME}-${RELEASE}/devkit/sqc
	chmod +x ../${BASENAME}-${RELEASE}/devkit/autodoc
	# Compile the PDF documentation and move it to top level dir
	(cd ../${BASENAME}-${RELEASE}/documentation/; make pdf)
	mv ../${BASENAME}-${RELEASE}/documentation/current.pdf  ../${BASENAME}-${RELEASE}/Userguide.pdf
	# Attach license stamps by replacing LICENSE keyword everywhere
	find ../${BASENAME}-${RELEASE} -type f -exec devkit/sedition-pp LICENSE LICENSE.tag {} \;
	# Other keyword replacements
	devkit/sedition RELEASE ${RELEASE} RELEASEDATE ${RELEASEDATE} COPYRIGHT ${COPYRIGHT} ../${BASENAME}-${RELEASE}/00README
	devkit/sedition RELEASE ${RELEASE}                                                   ../${BASENAME}-${RELEASE}/INSTALL
	# Cleanup
	(cd ../${BASENAME}-${RELEASE}/; make implode)
	(cd ../${BASENAME}-${RELEASE}/; make distclean)
	# Packaging
	(cd ..;	tar cvf ${BASENAME}-${RELEASE}.tar ${BASENAME}-${RELEASE})
	(cd ..; ${COMPRESS} ${BASENAME}-${RELEASE}.tar)

# `make dcheck`: run developer testsuite, save output in testsuite/dcheck.report
dcheck:
	(cd testsuite; make dcheck)

# The "implode" target is used when we've got Easel as a subdirectory
# of a larger project, like Infernal or HMMER, and we're building a
# distribution for that larger project. We remove any "personal
# information" from Easel. Eventually that'd include our bug tracking,
# for instance, but right now there's nothing to do.
implode:
	-rm -f 00CHECKLIST
	-rm -f LICENSE.tag

tags:
	etags *.c *.h *.tex documentation/*.tex miniapps/*.c miniapps/*.man Makefile.in

# "supertags": a tags table for all Easel, HMMER, Infernal source.
#              This lets me make changes in Easel, then propagate 
#              necessary modifications throughout code that depends
#              on Easel. 
#              The target depends on how I have my source directories
#              laid out (~src/hmmer, ~src/infernal)
supertags:
	etags *.c *.h *.tex documentation/*.tex 
	etags -a miniapps/*.c miniapps/*.man Makefile.in
	etags -a ~/src/hmmer/src/*.c ~/src/hmmer/src/*.h 
	etags -a ~/src/hmmer/Makefile.in ~/src/hmmer/src/Makefile.in 
	etags -a ~/src/infernal/src/*.c ~/src/infernal/src/*.h 
	etags -a ~/src/infernal/testsuite/*.c 
	etags -a ~/src/infernal/Makefile.in ~/src/infernal/src/Makefile.in 

# magic SVN for setting keyword ID replacement on a new module foo:
# svn propset svn:keywords "Id" foo.[ch]

################################################################
# @LICENSE@
################################################################
